version: "3.3"

volumes:
  db_api:
  db_admin:
  static_volume:
  media_volume:




services:
  postgres_db:
    image: postgres:16.3
    volumes:
      - db_api:/var/lib/postgresql/data/
    restart: always
    env_file:
      - ./.env


  admin_db:
    image: postgres:16.3
    volumes:
      - db_admin:/var/lib/postgresql/data/
    restart: always
    env_file:
      - ./.env.unfold


  api: &api
    build:
      context: .
      dockerfile: ./Dockerfile
    depends_on:
      - postgres_db
    restart: always
    command: make run-docker
    # expose:
    #   - "8000"
    # ports:
    #   - "8000:8000"
    env_file:
      - ./.env
    volumes:
      - media_volume:/usr/src/app/media


  admin:
    # <<: *api
    build:
      context: .
      dockerfile: ./Dockerfile
    command: make unfold-docker
    env_file:
      ./.env
    volumes:
      - static_volume:/usr/src/app/staticfiles
      - media_volume:/usr/src/app/media
    depends_on:
    - admin_db
    # expose:
    #   - "8001"
    # ports:
    #   - "8001:8001"

  nginx:
    build: 
      context: ./nginx
    # volumes:
    #   - /home/demodev/web/shooter.demodev.cc/public_html/public/static:/usr/src/app/staticfiles
    ports:
      - 80:80
      # - 80:80
    depends_on:
      - api
      - admin
    volumes:
      - static_volume:/usr/src/app/staticfiles
      - media_volume:/usr/src/app/media



  migrator:
    build:
      context: .
      dockerfile: ./Dockerfile
    depends_on:
      - admin_db
      - postgres_db
    command: make run-migrator-docker
    volumes:
      - static_volume:/usr/src/app/staticfiles
      - media_volume:/usr/src/app/media
    env_file:
      - ./.env

